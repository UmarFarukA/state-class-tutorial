{"ast":null,"code":"var _jsxFileName = \"/home/ufaz/Desktop/web_dev/Frontend/practice/ReactCourseProjects/src/components/ClassBased_Apps/WeatherApp/Weather.js\";\nimport React from \"react\";\nimport \"./Weather.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Weather extends React.Component {\n  constructor(props) {\n    super(props);\n    this.fetchWeather = async () => {\n      if (this.state.location.length < 2) return this.setState({\n        weather: {}\n      });\n      try {\n        this.setState({\n          isLoading: true\n        });\n        // 1) Getting location (geocoding)\n        const geoRes = await fetch(`https://geocoding-api.open-meteo.com/v1/search?name=${this.state.location}`);\n        const geoData = await geoRes.json();\n        console.log(geoData);\n        if (!geoData.results) throw new Error(\"Location not found\");\n        const {\n          latitude,\n          longitude,\n          timezone,\n          name,\n          country_code\n        } = geoData.results.at(0);\n        console.log(`${name} ${convertToFlag(country_code)}`);\n        this.setState({\n          displayLocation: `${name} ${convertToFlag(country_code)}`\n        });\n\n        // 2) Getting actual weather\n        const weatherRes = await fetch(`https://api.open-meteo.com/v1/forecast?latitude=${latitude}&longitude=${longitude}&timezone=${timezone}&daily=weathercode,temperature_2m_max,temperature_2m_min`);\n        const weatherData = await weatherRes.json();\n        this.setState({\n          weather: weatherData.daily\n        });\n        // console.log(weatherData.daily);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n    this.setLocation = e => {\n      this.setState({\n        location: e.target.value\n      });\n    };\n    this.state = {\n      location: \"\",\n      isLoading: false,\n      displayLocation: \"\",\n      weather: {}\n    };\n  }\n  componentDidMount() {\n    this.setState({\n      location: localStorage.getItem(\"location\") || \"\"\n    });\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.location !== prevState.location) {\n      this.fetchWeather();\n      localStorage.setItem(\"location\", this.state.location);\n    }\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Classy Weather\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"\",\n          value: this.props.location,\n          onChange: this.setLocation\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this), this.state.isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"loader\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 42\n        }, this), this.state.weather.weathercode && /*#__PURE__*/_jsxDEV(WeatherData, {\n          weather: this.state.weather,\n          location: this.state.displayLocation\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 16\n    }, this);\n  }\n}\nexport default Weather;\nclass WeatherData extends React.Component {\n  render() {\n    const {\n      temperature_2m_max: max,\n      temperature_2m_min: min,\n      time: dates,\n      weathercode: codes\n    } = this.props.weather;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Weather \", this.props.location]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"weather\",\n        children: dates.map((date, i) => /*#__PURE__*/_jsxDEV(Day, {\n          date: date,\n          max: max.at(i),\n          min: min.at(i),\n          code: codes.at(i),\n          isToday: i === 0\n        }, date, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this);\n  }\n}\nclass Day extends React.Component {\n  render() {\n    const {\n      date,\n      max,\n      min,\n      code,\n      isToday\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"day\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: getWeatherIcon(code)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: isToday ? \"Today\" : formatDay(date)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [Math.floor(min), \"\\xB0 \\u2014 \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [Math.ceil(max), \"\\xB0\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 52\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this);\n  }\n}\nfunction getWeatherIcon(wmoCode) {\n  const icons = new Map([[[0], \"☀️\"], [[1], \"🌤\"], [[2], \"⛅️\"], [[3], \"☁️\"], [[45, 48], \"🌫\"], [[51, 56, 61, 66, 80], \"🌦\"], [[53, 55, 63, 65, 57, 67, 81, 82], \"🌧\"], [[71, 73, 75, 77, 85, 86], \"🌨\"], [[95], \"🌩\"], [[96, 99], \"⛈\"]]);\n  const arr = [...icons.keys()].find(key => key.includes(wmoCode));\n  if (!arr) return \"NOT FOUND\";\n  return icons.get(arr);\n}\nfunction convertToFlag(countryCode) {\n  const codePoints = countryCode.toUpperCase().split(\"\").map(char => 127397 + char.charCodeAt());\n  return String.fromCodePoint(...codePoints);\n}\nfunction formatDay(dateStr) {\n  return new Intl.DateTimeFormat(\"en\", {\n    weekday: \"short\"\n  }).format(new Date(dateStr));\n}","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Weather","Component","constructor","props","fetchWeather","state","location","length","setState","weather","isLoading","geoRes","fetch","geoData","json","console","log","results","Error","latitude","longitude","timezone","name","country_code","at","convertToFlag","displayLocation","weatherRes","weatherData","daily","err","error","setLocation","e","target","value","componentDidMount","localStorage","getItem","componentDidUpdate","prevProps","prevState","setItem","render","Fragment","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","weathercode","WeatherData","temperature_2m_max","max","temperature_2m_min","min","time","dates","codes","map","date","i","Day","code","isToday","getWeatherIcon","formatDay","Math","floor","ceil","wmoCode","icons","Map","arr","keys","find","key","includes","get","countryCode","codePoints","toUpperCase","split","char","charCodeAt","String","fromCodePoint","dateStr","Intl","DateTimeFormat","weekday","format","Date"],"sources":["/home/ufaz/Desktop/web_dev/Frontend/practice/ReactCourseProjects/src/components/ClassBased_Apps/WeatherApp/Weather.js"],"sourcesContent":["import React from \"react\";\nimport \"./Weather.css\";\n\nclass Weather extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            location: \"\",\n            isLoading: false,\n            displayLocation: \"\",\n            weather: {}\n        }\n    }\n\n    componentDidMount() {\n        this.setState({ location: localStorage.getItem(\"location\") || \"\" });\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.state.location !== prevState.location) {\n            this.fetchWeather();\n\n            localStorage.setItem(\"location\", this.state.location);\n        }\n    }\n\n    fetchWeather = async () => {\n        if (this.state.location.length < 2) return this.setState({ weather: {} })\n        try {\n\n            this.setState({ isLoading: true })\n            // 1) Getting location (geocoding)\n            const geoRes = await fetch(\n                `https://geocoding-api.open-meteo.com/v1/search?name=${this.state.location}`\n            );\n            const geoData = await geoRes.json();\n            console.log(geoData);\n\n            if (!geoData.results) throw new Error(\"Location not found\");\n\n            const { latitude, longitude, timezone, name, country_code } =\n                geoData.results.at(0);\n            console.log(`${name} ${convertToFlag(country_code)}`);\n\n            this.setState({ displayLocation: `${name} ${convertToFlag(country_code)}` })\n\n            // 2) Getting actual weather\n            const weatherRes = await fetch(\n                `https://api.open-meteo.com/v1/forecast?latitude=${latitude}&longitude=${longitude}&timezone=${timezone}&daily=weathercode,temperature_2m_max,temperature_2m_min`\n            );\n            const weatherData = await weatherRes.json();\n            this.setState({ weather: weatherData.daily })\n            // console.log(weatherData.daily);\n        } catch (err) {\n            console.error(err);\n        }\n    };\n\n    setLocation = e => {\n        this.setState({ location: e.target.value })\n    }\n\n    render() {\n        return <React.Fragment>\n            <div className=\"app\">\n                <h1>Classy Weather</h1>\n                <input type=\"text\" name=\"\" value={this.props.location} onChange={this.setLocation} />\n\n                {this.state.isLoading && <p className=\"loader\">Loading...</p>}\n\n                {this.state.weather.weathercode && (\n                    <WeatherData\n                        weather={this.state.weather}\n                        location={this.state.displayLocation}\n                    />\n                )}\n            </div>\n        </React.Fragment>\n    }\n}\n\nexport default Weather;\n\nclass WeatherData extends React.Component {\n    render() {\n        const {\n            temperature_2m_max: max,\n            temperature_2m_min: min,\n            time: dates,\n            weathercode: codes,\n        } = this.props.weather;\n        return (\n            <div>\n                <h2>Weather {this.props.location}</h2>\n                <ul className=\"weather\">\n                    {dates.map((date, i) => (\n                        <Day\n                            date={date}\n                            max={max.at(i)}\n                            min={min.at(i)}\n                            code={codes.at(i)}\n                            key={date}\n                            isToday={i === 0}\n                        />\n                    ))}\n                </ul>\n            </div>\n        )\n    }\n}\n\nclass Day extends React.Component {\n    render() {\n        const { date, max, min, code, isToday } = this.props;\n        return (\n            <li className=\"day\">\n                <span>{getWeatherIcon(code)}</span>\n                <p>{isToday ? \"Today\" : formatDay(date)}</p>\n                <p>\n                    {Math.floor(min)}&deg; &mdash; <strong>{Math.ceil(max)}&deg;</strong>\n                </p>\n            </li>\n        )\n    }\n}\n\nfunction getWeatherIcon(wmoCode) {\n    const icons = new Map([\n        [[0], \"☀️\"],\n        [[1], \"🌤\"],\n        [[2], \"⛅️\"],\n        [[3], \"☁️\"],\n        [[45, 48], \"🌫\"],\n        [[51, 56, 61, 66, 80], \"🌦\"],\n        [[53, 55, 63, 65, 57, 67, 81, 82], \"🌧\"],\n        [[71, 73, 75, 77, 85, 86], \"🌨\"],\n        [[95], \"🌩\"],\n        [[96, 99], \"⛈\"],\n    ]);\n    const arr = [...icons.keys()].find((key) => key.includes(wmoCode));\n    if (!arr) return \"NOT FOUND\";\n    return icons.get(arr);\n}\n\nfunction convertToFlag(countryCode) {\n    const codePoints = countryCode\n        .toUpperCase()\n        .split(\"\")\n        .map((char) => 127397 + char.charCodeAt());\n    return String.fromCodePoint(...codePoints);\n}\n\nfunction formatDay(dateStr) {\n    return new Intl.DateTimeFormat(\"en\", {\n        weekday: \"short\",\n    }).format(new Date(dateStr));\n}\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}