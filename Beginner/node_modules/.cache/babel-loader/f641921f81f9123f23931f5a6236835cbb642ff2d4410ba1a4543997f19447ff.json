{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nexport function useLocation(city) {\n  _s();\n  const [location, setLocation] = useState({\n    latitude: 0,\n    longitude: 0,\n    timezone: \"\",\n    name: \"\",\n    country_code: \"\"\n  });\n  useEffect(function () {\n    async function getLocation() {\n      try {\n        const res = await fetch(`https://geocoding-api.open-meteo.com/v1/search?name=${city}`);\n        const geoResult = await res.json();\n        if (!geoResult.results || geoResult.results.length === 0) {\n          throw new Error(\"Location not found\");\n        }\n        setLocation(geoResult.results[0]);\n      } catch (error) {\n        console.error(\"Error fetching location:\", error);\n      }\n    }\n    getLocation();\n  }, [city]);\n  return [location.latitude, location.longitude, location.timezone, location.name, location.country_code];\n}\n_s(useLocation, \"V2GCa5A7DAA2Ne3eAt07q4mI3Qk=\");","map":{"version":3,"names":["useEffect","useState","useLocation","city","_s","location","setLocation","latitude","longitude","timezone","name","country_code","getLocation","res","fetch","geoResult","json","results","length","Error","error","console"],"sources":["/home/ufaz/Desktop/web_dev/Frontend/practice/ReactCourseProjects/src/components/FuncBased_Apps/WeatherApp/useLocation.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\nexport function useLocation(city) {\n  const [location, setLocation] = useState({\n    latitude: 0,\n    longitude: 0,\n    timezone: \"\",\n    name: \"\",\n    country_code: \"\",\n  });\n  useEffect(\n    function () {\n      async function getLocation() {\n        try {\n          const res = await fetch(\n            `https://geocoding-api.open-meteo.com/v1/search?name=${city}`\n          );\n          const geoResult = await res.json();\n\n          if (!geoResult.results || geoResult.results.length === 0) {\n            throw new Error(\"Location not found\");\n          }\n\n          setLocation(geoResult.results[0]);\n        } catch (error) {\n          console.error(\"Error fetching location:\", error);\n        }\n      }\n\n      getLocation();\n    },\n\n    [city]\n  );\n\n  return [\n    location.latitude,\n    location.longitude,\n    location.timezone,\n    location.name,\n    location.country_code,\n  ];\n}\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,OAAO,SAASC,WAAWA,CAACC,IAAI,EAAE;EAAAC,EAAA;EAChC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGL,QAAQ,CAAC;IACvCM,QAAQ,EAAE,CAAC;IACXC,SAAS,EAAE,CAAC;IACZC,QAAQ,EAAE,EAAE;IACZC,IAAI,EAAE,EAAE;IACRC,YAAY,EAAE;EAChB,CAAC,CAAC;EACFX,SAAS,CACP,YAAY;IACV,eAAeY,WAAWA,CAAA,EAAG;MAC3B,IAAI;QACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CACpB,uDAAsDX,IAAK,EAC9D,CAAC;QACD,MAAMY,SAAS,GAAG,MAAMF,GAAG,CAACG,IAAI,CAAC,CAAC;QAElC,IAAI,CAACD,SAAS,CAACE,OAAO,IAAIF,SAAS,CAACE,OAAO,CAACC,MAAM,KAAK,CAAC,EAAE;UACxD,MAAM,IAAIC,KAAK,CAAC,oBAAoB,CAAC;QACvC;QAEAb,WAAW,CAACS,SAAS,CAACE,OAAO,CAAC,CAAC,CAAC,CAAC;MACnC,CAAC,CAAC,OAAOG,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD;IACF;IAEAR,WAAW,CAAC,CAAC;EACf,CAAC,EAED,CAACT,IAAI,CACP,CAAC;EAED,OAAO,CACLE,QAAQ,CAACE,QAAQ,EACjBF,QAAQ,CAACG,SAAS,EAClBH,QAAQ,CAACI,QAAQ,EACjBJ,QAAQ,CAACK,IAAI,EACbL,QAAQ,CAACM,YAAY,CACtB;AACH;AAACP,EAAA,CAxCeF,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}