{"ast":null,"code":"var _jsxFileName = \"/home/ufaz/Desktop/web_dev/Frontend/practice/state-class-tutorial/src/components/WeatherApp/Weather.js\";\nimport React from \"react\";\nimport \"./Weather.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Weather extends React.Component {\n  componentDidMount() {\n    getWeather('Abuja');\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Classy Weather\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 16\n    }, this);\n  }\n}\nexport default Weather;\nfunction getWeatherIcon(wmoCode) {\n  const icons = new Map([[[0], \"☀️\"], [[1], \"🌤\"], [[2], \"⛅️\"], [[3], \"☁️\"], [[45, 48], \"🌫\"], [[51, 56, 61, 66, 80], \"🌦\"], [[53, 55, 63, 65, 57, 67, 81, 82], \"🌧\"], [[71, 73, 75, 77, 85, 86], \"🌨\"], [[95], \"🌩\"], [[96, 99], \"⛈\"]]);\n  const arr = [...icons.keys()].find(key => key.includes(wmoCode));\n  if (!arr) return \"NOT FOUND\";\n  return icons.get(arr);\n}\nfunction convertToFlag(countryCode) {\n  const codePoints = countryCode.toUpperCase().split(\"\").map(char => 127397 + char.charCodeAt());\n  return String.fromCodePoint(...codePoints);\n}\nfunction formatDay(dateStr) {\n  return new Intl.DateTimeFormat(\"en\", {\n    weekday: \"short\"\n  }).format(new Date(dateStr));\n}\nasync function getWeather(location) {\n  try {\n    // 1) Getting location (geocoding)\n    const geoRes = await fetch(`https://geocoding-api.open-meteo.com/v1/search?name=${location}`);\n    const geoData = await geoRes.json();\n    console.log(geoData);\n    if (!geoData.results) throw new Error(\"Location not found\");\n    const {\n      latitude,\n      longitude,\n      timezone,\n      name,\n      country_code\n    } = geoData.results.at(0);\n    console.log(`${name} ${convertToFlag(country_code)}`);\n\n    // 2) Getting actual weather\n    const weatherRes = await fetch(`https://api.open-meteo.com/v1/forecast?latitude=${latitude}&longitude=${longitude}&timezone=${timezone}&daily=weathercode,temperature_2m_max,temperature_2m_min`);\n    const weatherData = await weatherRes.json();\n    console.log(weatherData.daily);\n  } catch (err) {\n    console.err(err);\n  }\n}","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Weather","Component","componentDidMount","getWeather","render","Fragment","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","getWeatherIcon","wmoCode","icons","Map","arr","keys","find","key","includes","get","convertToFlag","countryCode","codePoints","toUpperCase","split","map","char","charCodeAt","String","fromCodePoint","formatDay","dateStr","Intl","DateTimeFormat","weekday","format","Date","location","geoRes","fetch","geoData","json","console","log","results","Error","latitude","longitude","timezone","name","country_code","at","weatherRes","weatherData","daily","err"],"sources":["/home/ufaz/Desktop/web_dev/Frontend/practice/state-class-tutorial/src/components/WeatherApp/Weather.js"],"sourcesContent":["import React from \"react\";\nimport \"./Weather.css\";\n\nclass Weather extends React.Component {\n\n    componentDidMount() {\n        getWeather('Abuja');\n    }\n\n    render() {\n        return <React.Fragment>\n            <div className=\"app\">\n                <h1>Classy Weather</h1>\n                <input type=\"text\" />\n            </div>\n        </React.Fragment>\n    }\n}\n\nexport default Weather;\n\nfunction getWeatherIcon(wmoCode) {\n    const icons = new Map([\n        [[0], \"☀️\"],\n        [[1], \"🌤\"],\n        [[2], \"⛅️\"],\n        [[3], \"☁️\"],\n        [[45, 48], \"🌫\"],\n        [[51, 56, 61, 66, 80], \"🌦\"],\n        [[53, 55, 63, 65, 57, 67, 81, 82], \"🌧\"],\n        [[71, 73, 75, 77, 85, 86], \"🌨\"],\n        [[95], \"🌩\"],\n        [[96, 99], \"⛈\"],\n    ]);\n    const arr = [...icons.keys()].find((key) => key.includes(wmoCode));\n    if (!arr) return \"NOT FOUND\";\n    return icons.get(arr);\n}\n\nfunction convertToFlag(countryCode) {\n    const codePoints = countryCode\n        .toUpperCase()\n        .split(\"\")\n        .map((char) => 127397 + char.charCodeAt());\n    return String.fromCodePoint(...codePoints);\n}\n\nfunction formatDay(dateStr) {\n    return new Intl.DateTimeFormat(\"en\", {\n        weekday: \"short\",\n    }).format(new Date(dateStr));\n}\n\nasync function getWeather(location) {\n    try {\n        // 1) Getting location (geocoding)\n        const geoRes = await fetch(\n            `https://geocoding-api.open-meteo.com/v1/search?name=${location}`\n        );\n        const geoData = await geoRes.json();\n        console.log(geoData);\n\n        if (!geoData.results) throw new Error(\"Location not found\");\n\n        const { latitude, longitude, timezone, name, country_code } =\n            geoData.results.at(0);\n        console.log(`${name} ${convertToFlag(country_code)}`);\n\n        // 2) Getting actual weather\n        const weatherRes = await fetch(\n            `https://api.open-meteo.com/v1/forecast?latitude=${latitude}&longitude=${longitude}&timezone=${timezone}&daily=weathercode,temperature_2m_max,temperature_2m_min`\n        );\n        const weatherData = await weatherRes.json();\n        console.log(weatherData.daily);\n    } catch (err) {\n        console.err(err);\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}